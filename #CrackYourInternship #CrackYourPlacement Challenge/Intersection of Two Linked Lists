/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:

int height(ListNode *head){
    ListNode* temp = head;
    int count = 0;
    while(temp){
        count++;
        temp = temp->next;
    }
    return count;
}
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {

    int size1 = height(headA);
    int size2 = height(headB);

    ListNode* tempa = headA;
    ListNode* tempb = headB;

    if (size1 > size2) {
        int size = size1 - size2;
        while (size--) {
            tempa = tempa->next;
        }
    } else {
        int size = size2 - size1;
        while (size--) {
            tempb = tempb->next;
        }
    }

    while (tempa != NULL && tempb != NULL) {
        if (tempa == tempb) {
            return tempa;
        }
        tempa = tempa->next;
        tempb = tempb->next;
    }

    return NULL;
    }
};
