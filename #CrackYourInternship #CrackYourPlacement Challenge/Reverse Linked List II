/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {

        ListNode* temp = head;
        vector<int>ans;

        while(temp!=NULL){
            ans.push_back(temp->val);
            temp = temp->next;
        }

       int i = left-1;
       int j = right-1;

       while(i<j){
        swap(ans[i++],ans[j--]);
       }

     ListNode* dummy = new ListNode(0);
     ListNode* current = dummy;
    for (int val : ans) {
        current->next = new ListNode(val);
        current = current->next;
    }

    ListNode* newHead = dummy->next;
    delete dummy;

    return newHead;
    }
};
