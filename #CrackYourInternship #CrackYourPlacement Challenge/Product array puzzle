// User function template for C++

class Solution {
  public:
    long long int help(vector<long long int>& nums,int &j){
      
      long long int ans = 1;
      
      for(int i=0;i<nums.size();i++){
          
          if(i != j){
              ans*=nums[i];
          }
      }
      
      return ans;
  }
  
    vector<long long int> productExceptSelf(vector<long long int>& nums) {

        int n = nums.size();
        
    vector<long long int> leftProduct(n, 1);
    // Array to store the product of all elements to the right of each element
    vector<long long int> rightProduct(n, 1);
    
    vector<long long int> result(n);
    
    // Fill leftProduct array
    for (int i = 1; i < n; ++i) {
        leftProduct[i] = leftProduct[i - 1] * nums[i - 1];
    }
    
    // Fill rightProduct array
    for (int i = n - 2; i >= 0; --i) {
        rightProduct[i] = rightProduct[i + 1] * nums[i + 1];
    }
    
    // Calculate result using leftProduct and rightProduct arrays
    for (int i = 0; i < n; ++i) {
        result[i] = leftProduct[i] * rightProduct[i];
    }
    
    return result;
    }
};
